rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read: if
          true
    }
    
    function userIsLoggedIn() {
    	return request.auth != null
    }
    function isNewResource() {
      return resource == null
    }
    function resourceBelongsToUser() {
      return request.auth.uid == resource.data.userId
    }
    
    //threads rules
    match /threads/{thread}{
    	function isOnlyAppendingPostAndContributors() {
      	return request.resource.data.diff(resource.data).affectedKeys().hasOnly(["posts","contributors"])
      }
      allow write: if
      	userIsLoggedIn() && (isNewResource() || resourceBelongsToUser())
      allow update: if
      	isOnlyAppendingPostAndContributors()
    }
    
    //posts rules
    match /posts/{post}{
      allow write: if
      	userIsLoggedIn() && (isNewResource() || resourceBelongsToUser())
    }
    
    //forum rules
    match /forums/{forum}{
    	function isOnlyAppendingThread() {
      	return request.resource.data.diff(resource.data).affectedKeys().hasOnly(["threads"])
      }
      allow update: if
      	userIsLoggedIn() && isOnlyAppendingThread()
    }
    
    //users rules
    match /forums/{forum}{
    	allow create: if
      	true
      allow update: if
      	request.auth.uid == resource.id
    }
  }
}